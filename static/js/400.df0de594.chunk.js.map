{"version":3,"file":"static/js/400.df0de594.chunk.js","mappings":"8MA6FA,UAvFkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAf,IAE7BC,GAAWC,EAAAA,EAAAA,MACXC,EAA8B,KAAjBX,EAAMY,QAAqC,KAApBV,EAASU,OACnD,GAAIR,EAAW,CACb,MAA+BA,EAAvBS,QAAAA,OAAR,MAAkB,GAAlB,EACA,GACO,MAFwBT,EAATU,KAGlBC,MAAM,+CACNN,GAASO,EAAAA,EAAAA,WAITD,MAAMF,GACNJ,GAASO,EAAAA,EAAAA,KAEd,CAED,IAAMC,EAAmB,SAAAC,GACvB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHnB,EAASoB,GACT,MACF,IAAK,WACHlB,EAAYkB,GACZ,MACF,QACE,OAEL,EAYD,OACE,gBAAKC,UAAWC,EAAAA,EAAAA,gBAAhB,UACE,kBAAMC,SAZW,SAAAN,GACnBA,EAAEO,iBACF,IAAMlB,EAAO,CACXP,MAAAA,EACAE,SAAAA,GAEFO,EAASiB,EAAAA,EAAAA,UAAyBnB,IAClCN,EAAS,IACTE,EAAY,GACb,EAGG,WACE,cAAGmB,UAAWC,EAAAA,EAAAA,mBAAd,oBACA,kBACED,UAAWC,EAAAA,EAAAA,YACXI,YAAY,mBACZC,aAAc,CACZC,QAAS,GACTC,MAAO,QACPC,UAAW,UAEbC,KAAK,QACLZ,KAAK,QACLC,MAAOrB,EACPiC,SAAUhB,KAEZ,cAAGK,UAAWC,EAAAA,EAAAA,mBAAd,uBACA,kBACED,UAAWC,EAAAA,EAAAA,YACXS,KAAK,WACLL,YAAY,sBACZG,MAAM,QACNV,KAAK,WACLC,MAAOnB,EACP+B,SAAUhB,EACViB,UAAU,OAEZ,0BACE,mBACEZ,UAAWC,EAAAA,EAAAA,eACXS,KAAK,SACLG,SAAUxB,EAHZ,0BAWT,C","sources":["Pages/LoginForm/LoginForm.jsx"],"sourcesContent":["import css from '../../components/css/phonebook.module.css';\nimport { useState } from 'react';\nimport authOperations from '../../redux/store/auth-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetError } from 'redux/store/auth';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userError = useSelector(state => state.user.error);\n\n  const dispatch = useDispatch();\n  const isDisabled = email.trim() === '' || password.trim() === '';\n  if (userError) {\n    const { message = '', code } = userError;\n    switch (code) {\n      case 400:\n        alert('User authorization error, please try again)');\n        dispatch(resetError());\n        break;\n\n      default:\n        alert(message);\n        dispatch(resetError());\n    }\n  }\n\n  const handleUserChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const user = {\n      email,\n      password,\n    };\n    dispatch(authOperations.loginUser(user));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <div className={css.form__container}>\n      <form onSubmit={handleSubmit}>\n        <p className={css.input__description}>Email</p>\n        <input\n          className={css.form__input}\n          placeholder=\"enter your email\"\n          _placeholder={{\n            opacity: 0.7,\n            color: 'white',\n            fontStyle: 'italic',\n          }}\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleUserChange}\n        ></input>\n        <p className={css.input__description}>Password</p>\n        <input\n          className={css.form__input}\n          type=\"password\"\n          placeholder=\"enter your password\"\n          color=\"white\"\n          name=\"password\"\n          value={password}\n          onChange={handleUserChange}\n          minLength=\"7\"\n        />\n        <div>\n          <button\n            className={css.SignUp__button}\n            type=\"submit\"\n            disabled={isDisabled}\n          >\n            Log in\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"names":["useState","email","setEmail","password","setPassword","userError","useSelector","state","user","error","dispatch","useDispatch","isDisabled","trim","message","code","alert","resetError","handleUserChange","e","currentTarget","name","value","className","css","onSubmit","preventDefault","authOperations","placeholder","_placeholder","opacity","color","fontStyle","type","onChange","minLength","disabled"],"sourceRoot":""}